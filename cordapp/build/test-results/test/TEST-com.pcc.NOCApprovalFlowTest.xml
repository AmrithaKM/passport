<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.pcc.NOCApprovalFlowTest" tests="5" skipped="0" failures="5" errors="0" timestamp="2020-03-23T01:13:25" hostname="ULTS-LAP293" time="32.713">
  <properties/>
  <testcase name="transactionConstructedByFlowHasNoInputsAttachmentsOrTimewindows" classname="com.pcc.NOCApprovalFlowTest" time="22.432">
    <failure message="java.util.concurrent.ExecutionException: java.lang.NullPointerException" type="java.util.concurrent.ExecutionException">java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1895)
	at net.corda.core.internal.concurrent.CordaFutureImpl.get(CordaFutureImpl.kt)
	at com.pcc.NOCApprovalFlowTest.transactionConstructedByFlowHasNoInputsAttachmentsOrTimewindows(NOCApprovalFlowTest.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:106)
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:25)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44)
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092)
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788)
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100)
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62)
</failure>
  </testcase>
  <testcase name="transactionConstructedByFlowUsesTheCorrectNotary" classname="com.pcc.NOCApprovalFlowTest" time="3.03">
    <failure message="java.util.concurrent.ExecutionException: java.lang.NullPointerException" type="java.util.concurrent.ExecutionException">java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1895)
	at net.corda.core.internal.concurrent.CordaFutureImpl.get(CordaFutureImpl.kt)
	at com.pcc.NOCApprovalFlowTest.transactionConstructedByFlowUsesTheCorrectNotary(NOCApprovalFlowTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:106)
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:25)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44)
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092)
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788)
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100)
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62)
</failure>
  </testcase>
  <testcase name="transactionConstructedByFlowHasOneTokenStateOutputWithTheCorrectAmountAndRecipient" classname="com.pcc.NOCApprovalFlowTest" time="2.592">
    <failure message="java.util.concurrent.ExecutionException: java.lang.NullPointerException" type="java.util.concurrent.ExecutionException">java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1895)
	at net.corda.core.internal.concurrent.CordaFutureImpl.get(CordaFutureImpl.kt)
	at com.pcc.NOCApprovalFlowTest.transactionConstructedByFlowHasOneTokenStateOutputWithTheCorrectAmountAndRecipient(NOCApprovalFlowTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:106)
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:25)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44)
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092)
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788)
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100)
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62)
</failure>
  </testcase>
  <testcase name="transactionConstructedByFlowHasOneCommandWithTheIssueAsASigner" classname="com.pcc.NOCApprovalFlowTest" time="2.371">
    <failure message="java.util.concurrent.ExecutionException: java.lang.NullPointerException" type="java.util.concurrent.ExecutionException">java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1895)
	at net.corda.core.internal.concurrent.CordaFutureImpl.get(CordaFutureImpl.kt)
	at com.pcc.NOCApprovalFlowTest.transactionConstructedByFlowHasOneCommandWithTheIssueAsASigner(NOCApprovalFlowTest.java:120)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:106)
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:25)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44)
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092)
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788)
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100)
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62)
</failure>
  </testcase>
  <testcase name="transactionConstructedByFlowHasOneOutputUsingTheCorrectContract" classname="com.pcc.NOCApprovalFlowTest" time="2.288">
    <failure message="java.util.concurrent.ExecutionException: java.lang.NullPointerException" type="java.util.concurrent.ExecutionException">java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1895)
	at net.corda.core.internal.concurrent.CordaFutureImpl.get(CordaFutureImpl.kt)
	at com.pcc.NOCApprovalFlowTest.transactionConstructedByFlowHasOneOutputUsingTheCorrectContract(NOCApprovalFlowTest.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:106)
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:25)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96)
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44)
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092)
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788)
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100)
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62)
</failure>
  </testcase>
  <system-out><![CDATA[2020-03-23 06:43:27,870 Test worker WARN Unable to instantiate org.fusesource.jansi.WindowsAnsiOutputStream
2020-03-23 06:43:27,886 Test worker WARN Unable to instantiate org.fusesource.jansi.WindowsAnsiOutputStream
[INFO ] 06:43:28,754 [Test worker] (AbstractSecurityProviderRegistrar.java:113) eddsa.EdDSASecurityProviderRegistrar.getOrCreateProvider - getOrCreateProvider(EdDSA) created instance of net.i2p.crypto.eddsa.EdDSASecurityProvider {}
[INFO ] 06:43:38,761 [Test worker] (CordappLoader.kt:137) cordapp.CordappLoader.createDevCordappJar - Generating a test-only cordapp of classes discovered in com.pcc at build\tmp\generated-test-cordapps\com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:38,793 [Test worker] (CordappLoader.kt:137) cordapp.CordappLoader.createDevCordappJar - Generating a test-only cordapp of classes discovered in com.pcc at build\tmp\generated-test-cordapps\com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:38,933 [Test worker] (CordappLoader.kt:137) cordapp.CordappLoader.createDevCordappJar - Generating a test-only cordapp of classes discovered in com.pcc.flows at build\tmp\generated-test-cordapps\com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:39,042 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:39,058 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:39,058 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:39,074 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:39,102 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:39,230 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:39,259 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:39,473 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:26.074Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:39,614 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-1 - Started. {}
[INFO ] 06:43:40,174 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:40,221 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:40,221 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:40,518 [Test worker] (Version.java:45) hibernate.Version.logVersion - HHH000412: Hibernate Core {5.2.6.Final} {}
[INFO ] 06:43:40,518 [Test worker] (Environment.java:213) cfg.Environment.<clinit> - HHH000206: hibernate.properties not found {}
[INFO ] 06:43:40,612 [Test worker] (JavaReflectionManager.java:66) common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} {}
[INFO ] 06:43:40,721 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:40,752 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:40,877 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:42,477 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1686c7e9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:42,605 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:42,950 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:43,295 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:43,295 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:43,342 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:43,510 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:43,510 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:43,916 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:43,931 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 06:43:44,087 [Test worker] (AbstractNode.kt:686) internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[WARN ] 06:43:44,397 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EF959F96680FE04BD0CBAD3EECFADEEF4057B78D5B37A725C67F507F7A1513BC, not inserting the second time {}
[INFO ] 06:43:44,506 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:44,537 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:44,537 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:44,553 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:44,553 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:44,553 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:44,553 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:44,553 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:44,553 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:44,584 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:44,616 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:44,653 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:44,690 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:44,719 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:44,735 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:26.074Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:44,735 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-2 - Started. {}
[INFO ] 06:43:44,751 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:44,751 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:44,751 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:44,766 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:44,766 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:44,782 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:44,891 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6d3f2d3d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:44,938 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:44,938 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:44,956 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:44,956 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:44,956 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:44,971 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:44,971 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:45,209 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:45,209 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:45,240 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BF358FF43D4C2D2DF29A18AB14506D19E4270A8825E11D0FE124D188E1414193, not inserting the second time {}
[INFO ] 06:43:45,264 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:45,264 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:45,279 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:45,279 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:45,279 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:45,295 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:45,295 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:45,310 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:45,310 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:45,310 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:45,310 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:45,310 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:45,326 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:45,326 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:45,326 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:45,357 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:45,392 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:45,417 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:45,455 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:45,497 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:45,513 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:26.074Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:45,513 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-3 - Started. {}
[INFO ] 06:43:45,529 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:45,529 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:45,529 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:45,529 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:45,529 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:45,544 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:45,622 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@46bdb22a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:45,654 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:45,654 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:45,669 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:45,669 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:45,669 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:45,685 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:45,685 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:45,916 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:45,931 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:45,962 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 078512FD444251FA0DD33A5F72FD3F3C3B1425C9D728F5576937CE90156B9222, not inserting the second time {}
[INFO ] 06:43:45,962 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:45,978 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:45,978 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:45,978 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:45,978 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:45,994 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:45,994 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:45,994 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:46,009 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:46,009 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:46,009 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:46,025 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:46,025 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:46,025 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:46,025 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:46,025 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:46,025 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:46,025 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:46,041 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:46,041 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:46,041 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:46,056 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:46,081 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:46,103 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:46,148 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:46,176 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:46,192 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:26.074Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:46,192 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-4 - Started. {}
[INFO ] 06:43:46,192 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:46,192 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:46,192 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:46,207 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:46,207 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:46,207 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:46,270 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3bf01e6d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:46,301 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:46,301 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:46,301 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:46,301 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,319 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:46,319 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,319 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,477 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:46,493 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:46,508 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8A35F3B37FC93C1824C3A43C6C71635AEB31815C584583F95A70091B9CC45A29, not inserting the second time {}
[INFO ] 06:43:46,525 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:46,525 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:46,525 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:46,525 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,525 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:46,541 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,541 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:46,541 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:46,556 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:46,556 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,556 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:46,572 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,572 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:46,572 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:46,572 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:46,572 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,588 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:46,588 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,588 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,603 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:46,603 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,603 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,603 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:46,603 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:46,603 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:46,603 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:46,603 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:46,619 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:46,656 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:46,682 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:46,710 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:46,737 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:46,752 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:26.074Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:46,752 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-5 - Started. {}
[INFO ] 06:43:46,752 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:46,752 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:46,752 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:46,768 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:46,768 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:46,768 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:46,815 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5acf6487] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:46,846 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:46,846 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:46,846 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:46,846 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:46,862 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:46,862 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:46,862 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,028 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:47,043 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:47,075 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BBFE76231037B308EF332F3E24A10130B59FE6A5941083715FA6B56083CC58F2, not inserting the second time {}
[INFO ] 06:43:47,075 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:47,075 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:47,090 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926023295) {}
[INFO ] 06:43:47,090 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,090 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:47,106 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,106 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:47,106 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:47,121 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926024956) {}
[INFO ] 06:43:47,121 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,121 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:47,137 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,137 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:47,137 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:47,137 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926025669) {}
[INFO ] 06:43:47,137 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,137 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:47,153 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,153 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:47,153 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:47,168 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926026301) {}
[INFO ] 06:43:47,168 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,168 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:47,168 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,168 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,184 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:47,184 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,184 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[INFO ] 06:43:47,184 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:47,184 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926026846) {}
[WARN ] 06:43:47,709 [Mock network] (FlowStateMachineImpl.kt:111) flow.[7e06ed64-7155-40b0-96cc-b35a96611f4b].run - Terminated by unexpected exception {}
java.lang.NullPointerException: null
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:106) ~[main/:?]
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.1-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.1-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_221]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_221]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_221]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_221]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.1-corda.jar:?]
[INFO ] 06:43:47,771 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-1 - Close initiated... {}
[INFO ] 06:43:47,787 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-1 - Closed. {}
[INFO ] 06:43:47,787 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-2 - Close initiated... {}
[INFO ] 06:43:47,787 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-2 - Closed. {}
[INFO ] 06:43:47,787 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-3 - Close initiated... {}
[INFO ] 06:43:47,787 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-3 - Closed. {}
[INFO ] 06:43:47,787 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-4 - Close initiated... {}
[INFO ] 06:43:47,802 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-4 - Closed. {}
[INFO ] 06:43:47,802 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-5 - Close initiated... {}
[INFO ] 06:43:47,802 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-5 - Closed. {}
[INFO ] 06:43:47,881 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:47,881 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:47,881 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:47,896 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:47,922 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:47,951 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:47,981 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:48,041 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:47.818Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:48,057 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-6 - Started. {}
[INFO ] 06:43:48,057 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:48,057 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:48,057 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:48,073 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:48,073 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:48,073 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:48,166 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4f3ab5cc] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:48,198 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:48,198 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:48,198 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:48,198 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:48,213 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:48,229 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:48,229 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:48,443 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:48,458 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 06:43:48,474 [Test worker] (AbstractNode.kt:686) internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[WARN ] 06:43:48,490 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 895738B547D681859CE4D1DE6143E63F5746FCA863B4004038628563AA5D693B, not inserting the second time {}
[INFO ] 06:43:48,490 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:48,505 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:48,505 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:48,505 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:48,505 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:48,505 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:48,505 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:48,505 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:48,505 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:48,537 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:48,564 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:48,588 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:48,618 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:48,643 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:48,643 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:47.818Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:48,658 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-7 - Started. {}
[INFO ] 06:43:48,658 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:48,658 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:48,658 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:48,674 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:48,674 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:48,674 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:48,721 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@237c07c9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:48,752 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:48,752 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:48,752 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:48,752 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:48,768 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:48,768 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:48,768 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:48,931 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:48,947 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:48,962 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 999402EE6740F9B184492AD6A81C615CF48C6775C7BA5ADB3EEC1817A90D483B, not inserting the second time {}
[INFO ] 06:43:48,962 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:48,962 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:48,978 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:48,978 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:48,978 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:48,978 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:48,978 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:48,994 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:48,994 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:48,994 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:48,994 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:48,994 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:48,994 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:48,994 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:48,994 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:49,009 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:49,041 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:49,066 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:49,094 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:49,120 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:49,136 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:47.818Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:49,136 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-8 - Started. {}
[INFO ] 06:43:49,136 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:49,136 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:49,136 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:49,136 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:49,151 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:49,151 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:49,230 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2b9c0450] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:49,276 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:49,276 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:49,292 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:49,292 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:49,292 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:49,292 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:49,292 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:49,482 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:49,498 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:49,529 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6FB2EC6DF4A674FEF96B5377CDB46736C9FF10DD5F2F3DB8C2787623CB304860, not inserting the second time {}
[INFO ] 06:43:49,544 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:49,544 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:49,544 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:49,544 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:49,560 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:49,560 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:49,560 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:49,560 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:49,576 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:49,576 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:49,576 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:49,591 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:49,591 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:49,607 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:49,607 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:49,607 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:49,607 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:49,607 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:49,607 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:49,607 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:49,607 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:49,638 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:49,672 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:49,697 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:49,730 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:49,759 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:49,759 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:47.818Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:49,759 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-9 - Started. {}
[INFO ] 06:43:49,775 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:49,775 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:49,775 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:49,775 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:49,775 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:49,775 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:49,838 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2a7993be] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:49,869 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:49,869 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:49,869 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:49,869 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:49,869 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:49,869 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:49,869 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,049 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:50,065 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:50,080 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B6FADFE5E4499D865E7AF3491094837337F0FB0212EA235888F33175736B4951, not inserting the second time {}
[INFO ] 06:43:50,080 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:50,080 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,096 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:50,096 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,096 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,112 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,112 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:50,112 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,127 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:50,127 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,127 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,127 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,127 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:50,127 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,143 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:50,143 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,143 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,158 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,158 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,158 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:50,158 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,158 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,158 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:50,158 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,158 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:50,158 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:50,158 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:50,190 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:50,221 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:50,248 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:50,279 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:50,303 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:50,303 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:47.818Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:50,303 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-10 - Started. {}
[INFO ] 06:43:50,319 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:50,319 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:50,319 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:50,335 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:50,336 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:50,336 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:50,398 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6f953ff] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:50,429 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:50,429 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:50,429 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:50,429 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,445 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,445 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,445 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,629 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:50,645 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:50,661 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 89F8776DFE262250D70F381FBB5B5D42BDDE1A10A6806E0D63F46D8A4F32F4B5, not inserting the second time {}
[INFO ] 06:43:50,676 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:50,676 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,676 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926028198) {}
[INFO ] 06:43:50,676 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,676 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,692 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,692 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:50,692 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,692 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926028752) {}
[INFO ] 06:43:50,692 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,692 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,707 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,707 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:50,707 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,707 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926029292) {}
[INFO ] 06:43:50,707 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,723 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,723 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,723 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,723 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,739 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926029869) {}
[INFO ] 06:43:50,739 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,739 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:50,739 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,739 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,754 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:50,754 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,754 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[INFO ] 06:43:50,754 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:50,754 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926030429) {}
[WARN ] 06:43:50,785 [Mock network] (FlowStateMachineImpl.kt:111) flow.[9813d88e-e820-452d-a13c-4c88b2c739db].run - Terminated by unexpected exception {}
java.lang.NullPointerException: null
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:106) ~[main/:?]
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.1-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.1-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_221]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_221]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_221]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_221]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.1-corda.jar:?]
[INFO ] 06:43:50,785 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-6 - Close initiated... {}
[INFO ] 06:43:50,801 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-6 - Closed. {}
[INFO ] 06:43:50,832 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-7 - Close initiated... {}
[INFO ] 06:43:50,832 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-7 - Closed. {}
[INFO ] 06:43:50,848 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-8 - Close initiated... {}
[INFO ] 06:43:50,848 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-8 - Closed. {}
[INFO ] 06:43:50,848 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-9 - Close initiated... {}
[INFO ] 06:43:50,848 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-9 - Closed. {}
[INFO ] 06:43:50,848 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-10 - Close initiated... {}
[INFO ] 06:43:50,848 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-10 - Closed. {}
[INFO ] 06:43:50,927 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:50,927 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:50,943 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:50,943 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:50,978 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:51,012 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:51,051 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:51,101 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:50.848Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:51,101 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-11 - Started. {}
[INFO ] 06:43:51,164 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:51,164 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:51,164 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:51,179 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:51,179 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:51,195 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:51,289 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@16045295] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:51,320 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:51,320 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:51,320 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:51,320 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:51,320 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:51,336 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:51,336 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:51,532 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:51,532 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 06:43:51,548 [Test worker] (AbstractNode.kt:686) internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[WARN ] 06:43:51,579 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9EAFAD1A5458BDAA5902AAE248E889F9CDFC2633BABCAAFB0EE4CBD512313AAF, not inserting the second time {}
[INFO ] 06:43:51,579 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:51,579 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:51,579 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:51,579 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:51,579 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:51,594 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:51,594 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:51,594 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:51,594 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:51,610 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:51,640 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:51,666 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:51,702 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:51,730 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:51,730 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:50.848Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:51,730 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-12 - Started. {}
[INFO ] 06:43:51,745 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:51,745 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:51,745 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:51,745 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:51,745 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:51,745 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:51,794 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@ebcfa87] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:51,810 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:51,810 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:51,810 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:51,810 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:51,825 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:51,825 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:51,825 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:51,994 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:52,010 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:52,026 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 83D3AD915BA40419B173750743EBAF4E1DD731C5A48FDE2EFF119B3E672F299A, not inserting the second time {}
[INFO ] 06:43:52,026 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:52,026 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,041 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:52,041 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:52,041 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,041 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:52,041 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:52,041 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:52,041 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:52,041 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:52,041 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:52,057 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:52,057 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:52,057 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:52,057 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:52,072 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:52,101 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:52,119 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:52,146 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:52,175 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:52,175 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:50.848Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:52,175 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-13 - Started. {}
[INFO ] 06:43:52,190 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:52,190 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:52,190 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:52,190 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:52,190 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:52,190 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:52,221 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7b2cfec6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:52,237 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:52,237 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:52,253 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:52,253 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,253 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,253 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,253 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,415 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:52,430 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:52,446 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 92C16BBB52D061F94FB624E6103EB147FC4E27C9C083916862509B7881B64A9B, not inserting the second time {}
[INFO ] 06:43:52,446 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:52,446 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,462 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:52,462 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,462 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,462 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,462 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:52,462 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,477 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:52,477 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,477 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,477 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,477 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,493 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:52,493 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,493 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,493 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:52,493 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,493 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:52,493 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:52,493 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:52,508 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:52,542 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:52,567 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:52,593 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:52,619 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:52,619 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:50.848Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:52,619 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-14 - Started. {}
[INFO ] 06:43:52,619 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:52,635 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:52,635 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:52,635 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:52,635 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:52,635 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:52,682 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3cfdd3d8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:52,682 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:52,682 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:52,697 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:52,697 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,697 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,697 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,697 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,851 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:52,851 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:52,867 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 46BA34F1A2ED8B17C1DD02877D0C468DAF92BDA69AF26D01C3D0988E79AB0901, not inserting the second time {}
[INFO ] 06:43:52,867 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:52,867 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,882 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:52,882 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,882 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,882 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,882 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:52,882 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,882 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:52,882 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,882 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,898 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,898 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,898 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,898 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:52,898 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,898 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:52,915 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,915 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,915 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:52,915 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,915 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,915 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:52,915 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:52,915 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:52,915 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:52,915 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:52,930 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:52,955 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:52,976 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:53,002 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:53,028 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:53,028 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:50.848Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:53,028 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-15 - Started. {}
[INFO ] 06:43:53,028 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:53,028 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:53,043 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:53,043 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:53,043 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:53,043 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:53,074 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3d96cb7e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:53,105 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:53,105 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:53,105 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:53,105 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,120 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:53,120 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,120 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,282 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:53,298 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:53,298 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 73090F44765D97F99F223F50C3852B1F66577E115120C56F1F487A9364117E12, not inserting the second time {}
[INFO ] 06:43:53,314 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:53,314 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:53,314 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926031320) {}
[INFO ] 06:43:53,314 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,314 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:53,329 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,329 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:53,329 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:53,329 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926031810) {}
[INFO ] 06:43:53,329 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,329 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:53,329 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,329 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:53,329 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:53,346 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926032253) {}
[INFO ] 06:43:53,346 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,346 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:53,346 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,346 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:53,346 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:53,362 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926032697) {}
[INFO ] 06:43:53,362 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,362 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:53,362 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,362 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,377 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:53,377 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,377 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[INFO ] 06:43:53,377 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:53,377 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926033105) {}
[WARN ] 06:43:53,393 [Mock network] (FlowStateMachineImpl.kt:111) flow.[a78b435c-fede-4ce0-a566-0766df742e37].run - Terminated by unexpected exception {}
java.lang.NullPointerException: null
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:106) ~[main/:?]
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.1-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.1-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_221]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_221]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_221]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_221]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.1-corda.jar:?]
[INFO ] 06:43:53,393 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-11 - Close initiated... {}
[INFO ] 06:43:53,393 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-11 - Closed. {}
[INFO ] 06:43:53,424 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-12 - Close initiated... {}
[INFO ] 06:43:53,424 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-12 - Closed. {}
[INFO ] 06:43:53,424 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-13 - Close initiated... {}
[INFO ] 06:43:53,424 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-13 - Closed. {}
[INFO ] 06:43:53,440 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-14 - Close initiated... {}
[INFO ] 06:43:53,440 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-14 - Closed. {}
[INFO ] 06:43:53,440 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-15 - Close initiated... {}
[INFO ] 06:43:53,440 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-15 - Closed. {}
[INFO ] 06:43:53,491 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:53,491 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:53,491 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:53,507 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:53,532 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:53,560 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:53,592 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:53,621 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:53.440Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:53,621 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-16 - Started. {}
[INFO ] 06:43:53,637 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:53,637 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:53,637 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:53,637 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:53,637 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:53,652 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:53,716 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4259df6e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:53,747 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:53,747 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:53,747 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:53,747 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:53,763 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:53,763 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:53,763 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:53,935 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:53,951 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 06:43:53,951 [Test worker] (AbstractNode.kt:686) internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[WARN ] 06:43:53,966 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1F1F569EC6F9A26B4CABBA502C66AD4874E45357019F2CD20D2BE32AD6E172DE, not inserting the second time {}
[INFO ] 06:43:54,029 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:54,030 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:54,030 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:54,030 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:54,030 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:54,030 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:54,030 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:54,030 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:54,030 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:54,046 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:54,070 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:54,094 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:54,120 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:54,148 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:54,148 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:53.440Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:54,148 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-17 - Started. {}
[INFO ] 06:43:54,148 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:54,148 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:54,148 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:54,163 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:54,163 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:54,163 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:54,195 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6a0843f5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:54,210 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:54,210 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:54,226 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:54,226 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:54,226 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:54,226 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:54,226 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:54,392 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:54,408 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:54,408 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1468AE23EE41D971817D7D21B0652A8827EB90B2F8E11AA521DD8471FD277D9C, not inserting the second time {}
[INFO ] 06:43:54,423 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:54,423 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:54,423 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:54,423 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:54,423 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:54,439 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:54,439 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:54,439 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:54,439 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:54,439 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:54,439 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:54,439 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:54,439 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:54,439 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:54,439 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:54,454 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:54,482 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:54,509 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:54,537 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:54,560 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:54,560 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:53.440Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:54,560 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-18 - Started. {}
[INFO ] 06:43:54,560 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:54,560 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:54,560 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:54,576 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:54,576 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:54,576 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:54,607 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@42cdbb9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:54,607 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:54,622 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:54,622 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:54,622 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:54,622 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:54,622 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:54,622 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:54,787 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:54,787 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:54,803 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1146F57FD1C2CC7DDB2FA29132C93237543D724221C1B9BC024202C2E8C41784, not inserting the second time {}
[INFO ] 06:43:54,803 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:54,818 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:54,818 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:54,818 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:54,818 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:54,818 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:54,818 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:54,818 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:54,818 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:54,818 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:54,818 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:54,834 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:54,834 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:54,834 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:54,834 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:54,834 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:54,834 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:54,834 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:54,834 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:54,834 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:54,834 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:54,849 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:54,886 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:54,909 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:54,937 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:54,965 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:54,965 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:53.440Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:54,965 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-19 - Started. {}
[INFO ] 06:43:54,965 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:54,980 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:54,980 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:54,980 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:54,980 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:54,980 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:55,027 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@722d4991] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:55,043 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:55,058 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:55,058 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:55,058 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,058 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,058 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,058 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,230 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:55,230 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:55,246 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CD99E1322AECDEBA7784F26BA1CFEB43415135909F0708414E8B102DAFE3AA88, not inserting the second time {}
[INFO ] 06:43:55,261 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:55,261 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,261 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:55,261 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,261 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,261 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,261 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:55,261 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,277 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:55,277 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,277 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,277 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,277 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:55,293 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,293 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:55,293 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,293 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,293 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,308 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,308 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:55,308 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,308 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,308 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:55,308 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,308 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:55,308 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:55,308 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:55,324 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:55,352 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:55,375 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:55,402 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:55,429 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:55,429 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:53.440Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:55,429 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-20 - Started. {}
[INFO ] 06:43:55,429 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:55,429 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:55,429 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:55,444 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:55,444 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:55,444 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:55,476 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@512fe84f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:55,491 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:55,491 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:55,507 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:55,507 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,507 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,507 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,507 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,655 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:55,670 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:55,686 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FD570EE380A4AE521745CA8DFC71C132C9AD596DA329CEC14EADDD834FE29B1C, not inserting the second time {}
[INFO ] 06:43:55,686 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:55,686 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,701 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926033747) {}
[INFO ] 06:43:55,701 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,701 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,701 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,701 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:55,701 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,701 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926034226) {}
[INFO ] 06:43:55,717 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,717 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,717 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,717 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:55,717 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,733 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926034622) {}
[INFO ] 06:43:55,733 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,733 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,733 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,733 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,733 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,748 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926035058) {}
[INFO ] 06:43:55,748 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,748 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:55,748 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,748 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,748 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:55,748 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,748 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[INFO ] 06:43:55,748 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:55,748 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926035507) {}
[WARN ] 06:43:55,764 [Mock network] (FlowStateMachineImpl.kt:111) flow.[bb5dbf6c-361b-4cfd-8fe9-f5b811b1d9f4].run - Terminated by unexpected exception {}
java.lang.NullPointerException: null
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:106) ~[main/:?]
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.1-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.1-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_221]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_221]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_221]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_221]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.1-corda.jar:?]
[INFO ] 06:43:55,779 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-16 - Close initiated... {}
[INFO ] 06:43:55,779 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-16 - Closed. {}
[INFO ] 06:43:55,795 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-17 - Close initiated... {}
[INFO ] 06:43:55,811 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-17 - Closed. {}
[INFO ] 06:43:55,811 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-18 - Close initiated... {}
[INFO ] 06:43:55,811 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-18 - Closed. {}
[INFO ] 06:43:55,811 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-19 - Close initiated... {}
[INFO ] 06:43:55,811 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-19 - Closed. {}
[INFO ] 06:43:55,811 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-20 - Close initiated... {}
[INFO ] 06:43:55,811 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-20 - Closed. {}
[INFO ] 06:43:55,874 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:55,874 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:55,874 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:55,874 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:55,911 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:55,939 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:55,968 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:55,995 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:55.811Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:55,995 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-21 - Started. {}
[INFO ] 06:43:55,995 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:55,995 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:56,011 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:56,011 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:56,011 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:56,011 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:56,058 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@677a9eb5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:56,089 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 06:43:56,089 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:56,089 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:56,089 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:56,089 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:56,105 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:56,105 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:56,297 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:56,297 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 06:43:56,313 [Test worker] (AbstractNode.kt:686) internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[WARN ] 06:43:56,313 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A75DCF358E5D9F3A2CBB90B5B1728B65618460B5B99F966D035326C645BAEAE4, not inserting the second time {}
[INFO ] 06:43:56,328 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:56,328 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:56,328 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:56,328 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:56,328 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:56,328 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:56,328 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:56,328 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:56,328 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:56,344 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:56,374 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:56,399 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:56,425 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:56,452 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:56,452 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:55.811Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:56,452 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-22 - Started. {}
[INFO ] 06:43:56,452 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:56,452 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:56,452 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:56,467 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:56,467 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:56,467 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:56,498 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6f4211d1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:56,514 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:56,514 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:56,530 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:56,530 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:56,530 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:56,530 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:56,530 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:56,697 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:56,712 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:56,712 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 80A9FC9C03726CB92831C66E1B0E7F04836A706D63001CC996110C72F469C92C, not inserting the second time {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:56,728 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:56,744 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:56,744 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:56,744 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:56,806 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:56,842 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:56,866 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:56,892 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:56,920 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:56,920 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:55.811Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:56,920 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-23 - Started. {}
[INFO ] 06:43:56,920 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:56,920 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:56,920 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:56,936 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:56,936 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:56,936 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:56,967 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@52083620] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:56,983 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:56,983 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:56,983 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:56,983 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:56,983 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:56,983 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:56,983 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:57,156 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:57,156 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:57,172 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 30102B0B92D649C912BBB290A60BAA0EDDCE002CE48B4625D457E3D8E2886B19, not inserting the second time {}
[INFO ] 06:43:57,187 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:57,187 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,187 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:57,187 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:57,187 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,187 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:57,187 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:57,187 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,203 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:57,203 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:57,203 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,203 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:57,203 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:57,203 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:57,203 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:57,203 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:57,203 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:57,203 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:57,218 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:57,218 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:57,218 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:57,223 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:57,255 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:57,281 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:57,310 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:57,338 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:57,338 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:55.811Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:57,338 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-24 - Started. {}
[INFO ] 06:43:57,338 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:57,353 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:57,353 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:57,353 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:57,353 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:57,353 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:57,385 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@393cb89e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:57,400 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:57,400 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:57,416 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:57,416 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,416 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,416 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,416 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,590 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:57,605 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:57,621 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0434A3135AA2F9E83E74E4D70D984514ADA3268C80A3BBA152EA7EC4A48B39CC, not inserting the second time {}
[INFO ] 06:43:57,621 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:57,621 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,621 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:57,621 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,621 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,621 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,621 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:57,621 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,636 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:57,636 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,636 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,636 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,636 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:57,636 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,636 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:57,636 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,636 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,652 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,652 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,652 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:57,652 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,652 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,652 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:57,652 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:57,652 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar, file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:57,652 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 06:43:57,652 [Test worker] (AbstractNode.kt:169) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 06:43:57,668 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-75eee709-d917-4536-9375-8beb460d6bc0.jar {}
[INFO ] 06:43:57,696 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc-54fd3aff-b189-4fdb-b137-b739787069b9.jar {}
[INFO ] 06:43:57,718 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp-contracts-states/build/libs/cordapp-contracts-states-0.1.jar {}
[INFO ] 06:43:57,745 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/C:/Users/amrithak/Desktop/r3corda_police_passport-apps-abhishek%20-%20Copy/cordapp/build/tmp/generated-test-cordapps/com.pcc.flows-5223830c-baba-483e-b745-2371affa709c.jar {}
[INFO ] 06:43:57,771 [Test worker] (AbstractNode.kt:768) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 06:43:57,771 [Test worker] (NetworkParametersReader.kt:57) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2020-03-23T01:13:55.811Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 06:43:57,771 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-25 - Started. {}
[INFO ] 06:43:57,771 [Test worker] (AbstractNode.kt:863) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 06:43:57,771 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:57,771 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:57,787 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 06:43:57,787 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 06:43:57,787 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@76601565 {}
[INFO ] 06:43:57,802 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2ecb5517] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 06:43:57,818 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 06:43:57,818 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 06:43:57,834 [Test worker] (AbstractNode.kt:331) internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 06:43:57,834 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:57,834 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:57,834 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:57,834 [Test worker] (AbstractNode.kt:334) internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:57,974 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 2C5AE11966144C6D3D77F9B8823762D88BE591F5C228BC8002B82CD254917419 {}
[WARN ] 06:43:57,989 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[WARN ] 06:43:58,005 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3353270D6E13BE551B045281D30BD2B64B461DB83F859D30375E33E2A45C8F2F, not inserting the second time {}
[INFO ] 06:43:58,005 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:58,005 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:58,005 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1584926036089) {}
[INFO ] 06:43:58,005 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:58,005 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:58,005 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:58,005 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:58,021 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:58,021 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1584926036530) {}
[INFO ] 06:43:58,021 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:58,021 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:58,021 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:58,021 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:58,021 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:58,021 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1584926036983) {}
[INFO ] 06:43:58,021 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:58,036 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:58,036 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:58,036 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:58,036 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:58,036 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=1, serial=1584926037416) {}
[INFO ] 06:43:58,036 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:58,036 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 06:43:58,036 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:58,036 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:58,052 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:58,052 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:58,052 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[INFO ] 06:43:58,052 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 06:43:58,052 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=1, serial=1584926037834) {}
[WARN ] 06:43:58,068 [Mock network] (FlowStateMachineImpl.kt:111) flow.[1dad44ae-d73a-4278-ac2c-7104136e29c4].run - Terminated by unexpected exception {}
java.lang.NullPointerException: null
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:106) ~[main/:?]
	at com.pcc.flows.NOCApprovalFlow.call(NOCApprovalFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.1-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.1-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_221]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_221]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_221]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_221]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.1-corda.jar:?]
[INFO ] 06:43:58,068 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-21 - Close initiated... {}
[INFO ] 06:43:58,068 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-21 - Closed. {}
[INFO ] 06:43:58,083 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-22 - Close initiated... {}
[INFO ] 06:43:58,099 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-22 - Closed. {}
[INFO ] 06:43:58,099 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-23 - Close initiated... {}
[INFO ] 06:43:58,099 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-23 - Closed. {}
[INFO ] 06:43:58,099 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-24 - Close initiated... {}
[INFO ] 06:43:58,099 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-24 - Closed. {}
[INFO ] 06:43:58,099 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-25 - Close initiated... {}
[INFO ] 06:43:58,099 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-25 - Closed. {}
]]></system-out>
  <system-err><![CDATA[QUASAR WARNING: Assertions enabled. This may harm performance.
QUASAR WARNING: Fibers are set to verify instrumentation. This may *severely* harm performance.
]]></system-err>
</testsuite>
